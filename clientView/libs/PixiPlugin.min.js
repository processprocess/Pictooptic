import "gsap";
/*!
 * VERSION: 0.0.2
 * DATE: 2017-04-11
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2017, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */
var _gsScope = (typeof module !== "undefined" && module.exports && typeof global !== "undefined") ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function () {
    "use strict";

    var _xyContexts = "position,scale,skew,pivot,anchor,tilePosition,tileScale".split(","),
		_contexts = {x:"position", y:"position", tileX:"tilePosition", tileY:"tilePosition"},
		_DEG2RAD = Math.PI / 180,
        _degreesToRadians = function(value) {
			return (typeof(value) === "string" && value.charAt(1) === "=") ? value.substr(0, 2) + (parseFloat(value.substr(2)) * _DEG2RAD) : value * _DEG2RAD;
        }, i, p;

	for (i = 0; i < _xyContexts.length; i++) {
		p = _xyContexts[i];
		_contexts[p + "X"] = p;
		_contexts[p + "Y"] = p;
    }

    _gsScope._gsDefine.plugin({
        propName: "pixi",
        priority: 0,
        API: 2,
        version: "0.0.2",

        init: function (target, values, tween, index) {
            if (!target instanceof PIXI.DisplayObject) {
                return false;
            }
            var context, axis, value, p;
            for (p in values) {
                context = _contexts[p];
                value = values[p];
                if (typeof(value) === "function") {
                    value = value(index || 0, target);
                }
                if (context) {
                    axis = (p.charAt(p.length-1).toLowerCase().indexOf("x") !== -1) ? "x" : "y";
	                this._addTween(target[context], axis, target[context][axis], (context === "skew") ? _degreesToRadians(value) : value, p);
                } else if (p === "scale" || p === "anchor" || p === "pivot" || p === "tileScale") {
	                this._addTween(target[p], "x", target[p].x, value, p + "X");
	                this._addTween(target[p], "y", target[p].y, value, p + "Y");
                } else if (p === "rotation") { //PIXI expects rotation in radians, but as a convenience we let folks define it in degrees and we do the conversion.
	                this._addTween(target, p, target.rotation, _degreesToRadians(value), p);
                } else {
	                this._addTween(target, p, target[p], value, p);
                }
            }
            return true;
        }
    });
}); if (_gsScope._gsDefine) { _gsScope._gsQueue.pop()(); }

//export to AMD/RequireJS and CommonJS/Node (precursor to full modular build system coming at a later date)
// (function(name) {
// 	"use strict";
// 	var getGlobal = function() {
// 		return (_gsScope.GreenSockGlobals || _gsScope)[name];
// 	};
// 	if (typeof(define) === "function" && define.amd) { //AMD
// 		define(["TweenLite"], getGlobal);
// 	} else if (typeof(module) !== "undefined" && module.exports) { //node
// 		require("../TweenLite.js");
// 		module.exports = getGlobal();
// 	}
// }("PixiPlugin"));